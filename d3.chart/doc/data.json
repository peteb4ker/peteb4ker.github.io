{
    "project": {
        "name": "peteb4ker.d3.chart",
        "description": "",
        "version": "0.0.0",
        "url": ""
    },
    "files": {
        "bower_components/d3.chart.arclabels/d3.chart.arclabels.js": {
            "name": "bower_components/d3.chart.arclabels/d3.chart.arclabels.js",
            "modules": {},
            "classes": {
                "d3.chart.ArcLabels": 1
            },
            "fors": {},
            "namespaces": {
                "d3.chart": 1
            }
        },
        "bower_components/d3.chart.axis/d3.chart.axis.js": {
            "name": "bower_components/d3.chart.axis/d3.chart.axis.js",
            "modules": {},
            "classes": {
                "d3.chart.Axis": 1
            },
            "fors": {},
            "namespaces": {
                "d3.chart": 1
            }
        },
        "bower_components/d3.chart.brush/d3.chart.brush.js": {
            "name": "bower_components/d3.chart.brush/d3.chart.brush.js",
            "modules": {},
            "classes": {
                "d3.chart.Brush": 1
            },
            "fors": {},
            "namespaces": {
                "d3.chart": 1
            }
        },
        "bower_components/d3.chart.eventbind/d3.chart.eventbind.js": {
            "name": "bower_components/d3.chart.eventbind/d3.chart.eventbind.js",
            "modules": {},
            "classes": {
                "d3.chart.EventBind": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bower_components/d3.chart.grid/d3.chart.grid.js": {
            "name": "bower_components/d3.chart.grid/d3.chart.grid.js",
            "modules": {},
            "classes": {
                "d3.chart.Grid": 1
            },
            "fors": {},
            "namespaces": {
                "d3.chart": 1
            }
        },
        "bower_components/d3.chart.plot/d3.chart.plot.js": {
            "name": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "modules": {},
            "classes": {
                "d3.chart.Plot": 1
            },
            "fors": {},
            "namespaces": {
                "d3.chart": 1
            }
        },
        "bower_components/d3.chart.text/d3.chart.text.js": {
            "name": "bower_components/d3.chart.text/d3.chart.text.js",
            "modules": {},
            "classes": {
                "d3.chart.Text": 1
            },
            "fors": {},
            "namespaces": {
                "d3.chart": 1
            }
        }
    },
    "modules": {},
    "classes": {
        "d3.chart.ArcLabels": {
            "name": "d3.chart.ArcLabels",
            "shortname": "d3.chart.ArcLabels",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "d3.chart",
            "file": "bower_components/d3.chart.arclabels/d3.chart.arclabels.js",
            "line": 6,
            "description": "Arc labels control for the d3.chart framework.\n\nRenders a set of labels around an arc. This control is\ndesigned to be used as a mix-in component to a parent\nchart.\n\n__Basic usage__\n\n```javascript\nchart.arcLabelsChart = chart.append(\"g\").chart(\"ArcLabels\")\n                                        .text(textFunction)\n                                        .arc(arc);\n```",
            "extends": "d3.chart.BaseChart",
            "author": "Pete Baker",
            "version": "0.1.0"
        },
        "d3.chart.Axis": {
            "name": "d3.chart.Axis",
            "shortname": "d3.chart.Axis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "d3.chart",
            "file": "bower_components/d3.chart.axis/d3.chart.axis.js",
            "line": 6,
            "description": "__Axis component for `d3.chart` v0.2 and `d3.chart.base` v0.4__\n\nIntended to be used as a component of a larger chart.  This mix-in\ncan determine the `axis.domain` scale if `domain([domain])` is set.\n\n__Basic usage__\n\n```javascript\nchart.xAxisMixin = chart.append(\"g\").chart(\"Axis\").axis(chart.xAxis());\n```\n\n__Customizing the CSS class and domain access method__\n\n```javascript\n   var yAxisPaddingScale = 1.1;\n\n   chart.yAxisMixin = chart.append(\"g\").chart(\"Axis\", {\n       cssClass: \"y\"\n   }).axis(chart.yAxis())\n     .domain(function(data) {\n           var yExtents = d3.extent(data, function(d) { return d[1]; });\n           var yMaxAbs = d3.max(yExtents.map(Math.abs)) * yAxisPaddingScale;\n           return [-yMaxAbs, yMaxAbs];\n   });\n```",
            "extends": "d3.chart.BaseChart",
            "author": "Pete Baker",
            "version": "0.1.0"
        },
        "d3.chart.Brush": {
            "name": "d3.chart.Brush",
            "shortname": "d3.chart.Brush",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "d3.chart",
            "file": "bower_components/d3.chart.brush/d3.chart.brush.js",
            "line": 11,
            "description": "__Brush component for ```d3.chart``` v0.2 and ```d3.chart.base``` v0.4__\n\nIntended to be used as a component of a larger chart.\n\n__Chart Basic usage__\n\n```javascript\nchart.brush = chart.append(\"g\").chart(\"Brush\", {scale: x});\n```",
            "is_constructor": 1
        },
        "d3.chart.EventBind": {
            "name": "d3.chart.EventBind",
            "shortname": "EventBind",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "d3.chart",
            "file": "bower_components/d3.chart.eventbind/d3.chart.eventbind.js",
            "line": 1,
            "description": "Binds an external element click handler to a\nchart event.\n\nPrevents the default event action, so for instance\nattaching to an <a href> element will not change URLs."
        },
        "d3.chart.Grid": {
            "name": "d3.chart.Grid",
            "shortname": "d3.chart.Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "d3.chart",
            "file": "bower_components/d3.chart.grid/d3.chart.grid.js",
            "line": 7,
            "description": "__Grid component for ```d3.chart``` v0.2 and ```d3.chart.base``` v0.4__\n\nPlots grid lines on a d3.chart.",
            "extends": "d3.chart.Axis",
            "author": "Pete Baker",
            "version": "0.1.0"
        },
        "d3.chart.Plot": {
            "name": "d3.chart.Plot",
            "shortname": "d3.chart.Plot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "d3.chart",
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 6,
            "description": "__Plotting component for ```d3.chart``` v0.2 and ```d3.chart.base``` v0.4__\n\nExtends d3.chart.base with margin support",
            "extends": "d3.chart.BaseChart",
            "author": "Pete Baker",
            "version": "0.1.0"
        },
        "d3.chart.Text": {
            "name": "d3.chart.Text",
            "shortname": "d3.chart.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "d3.chart",
            "file": "bower_components/d3.chart.text/d3.chart.text.js",
            "line": 6,
            "description": "__Text chart component for ```d3.chart``` v0.2__\n\nRenders an text element on a chart. Intended to be attached to a base element\nwhich is appropriately transformed by the parent chart.",
            "author": "Pete Baker",
            "version": "0.1.0"
        }
    },
    "classitems": [
        {
            "file": "bower_components/d3.chart.arclabels/d3.chart.arclabels.js",
            "line": 29,
            "description": "Initializes the chart.\n\nCreates and configures a new arc labels layer.",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "initialize",
            "class": "d3.chart.ArcLabels",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.arclabels/d3.chart.arclabels.js",
            "line": 87,
            "description": "Sets the text value or function for each text element.\n\nIf the `text` parameter is not supplied, the existing `text` value\nis returned.",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "a new text String or Function\nto be applied to all elements.",
                    "type": "String|Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "the chart instance (for method chaining), or `text`.",
                "type": "String|Function|this"
            },
            "class": "d3.chart.ArcLabels",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.arclabels/d3.chart.arclabels.js",
            "line": 105,
            "description": "Sets or gets the arc object.\n\nIf `arc` is not supplied, the existing `arc`\nis returned.",
            "itemtype": "method",
            "name": "arc",
            "params": [
                {
                    "name": "arc",
                    "description": "A d3 SVG arc object",
                    "type": "d3.svg.arc",
                    "optional": true
                }
            ],
            "return": {
                "description": "the chart instance (for method chaining), or `arc`.",
                "type": "d3.svg.arc|this"
            },
            "class": "d3.chart.ArcLabels",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.axis/d3.chart.axis.js",
            "line": 41,
            "description": "Initializes the chart.\n\nCreates a default `axis` object and axis chart layer.",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "options.showLabels|true",
                    "description": "flag indicating whether to show axis labels.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "d3.chart.Axis",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.axis/d3.chart.axis.js",
            "line": 91,
            "description": "Axis setter/getter.\n\nIf `axis` is not supplied, the current `axis` value\nis returned.",
            "itemtype": "method",
            "name": "axis",
            "params": [
                {
                    "name": "axis",
                    "description": "A ```d3.chart.axis```\ninstance.",
                    "type": "d3.chart.axis",
                    "optional": true
                }
            ],
            "return": {
                "description": "The current ```d3.chart.axis``` instance if\nno arguments are given, otherwise the chart instance.",
                "type": "d3.chart.axis|this"
            },
            "class": "d3.chart.Axis",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.axis/d3.chart.axis.js",
            "line": 112,
            "description": "Sets/gets the domain access function.\n\nIf `undefined`, the domain will not be calculated\nwhen the axis control receives new data.",
            "itemtype": "method",
            "name": "domain",
            "params": [
                {
                    "name": "domain",
                    "description": "Domain access function\nwhich transforms x-axis data to the x-axis domain. May be ```undefined```.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "The domain access function if no arguments are given,\notherwise the chart instance.",
                "type": "Function|this"
            },
            "class": "d3.chart.Axis",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.eventbind/d3.chart.eventbind.js",
            "line": 12,
            "description": "Initializes the chart",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "options.trigger",
                    "description": "the chart event that will be triggered on the\nelement event",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "chart",
                    "description": "the target chart to trigger the event on",
                    "type": "d3.chart"
                },
                {
                    "name": "element",
                    "description": "the external element which will generate the event",
                    "type": "HTMLElement"
                },
                {
                    "name": "on",
                    "description": "the target `event` on the given `element`",
                    "type": "String"
                },
                {
                    "name": "trigger",
                    "description": "the target function to execute.",
                    "type": "Function"
                }
            ],
            "class": "d3.chart.EventBind",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.grid/d3.chart.grid.js",
            "line": 20,
            "description": "Initializes the chart.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options.grid",
                    "description": "Either 'x' or 'y' to denote rendering\n                               an x or y grid. Defaults to 'x'.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options.scale",
                    "description": "A d3 scale instance. Defaults to\n                                  ```d3.scale.linear```.",
                    "type": "d3.scale",
                    "optional": true
                }
            ],
            "class": "d3.chart.Grid",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.grid/d3.chart.grid.js",
            "line": 61,
            "description": "Sets the grid length. This should be called once on\nsetup and each time the grid dimensions change.",
            "itemtype": "method",
            "name": "gridLength",
            "params": [
                {
                    "name": "length",
                    "description": "The new grid length.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "the grid length if no parameter is given,\notherwise the chart instance.",
                "type": "Number|this"
            },
            "class": "d3.chart.Grid",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 19,
            "description": "Initializes the chart.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Chart options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "margins",
                            "description": "Margin configuration options",
                            "type": "Number",
                            "optional": true,
                            "props": [
                                {
                                    "name": "top",
                                    "description": "Top margin",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "right",
                                    "description": "Right margin",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "bottom",
                                    "description": "Bottom margin",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "left",
                                    "description": "Left margin",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "d3.chart.Plot",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 53,
            "description": "Margin setter getter.\n\nIf new margins are given, the plot area is transformed appropriately\nand a resize is triggered.",
            "itemtype": "method",
            "name": "margins",
            "params": [
                {
                    "name": "margins",
                    "description": "Margin configuration options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "top",
                            "description": "Top margin, in px",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "left",
                            "description": "Left margin, in px",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "bottom",
                            "description": "Bottom margin, in px",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "right",
                            "description": "Right margin, in px",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The chart instance if no parameter is given,\notherwise the existing margin configuration.",
                "type": "Object|this"
            },
            "class": "d3.chart.Plot",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 84,
            "description": "Gets the plot width",
            "itemtype": "method",
            "name": "plotWidth",
            "return": {
                "description": "The plot area width, which is the\nchart ```width``` minus ```left``` and ```right``` margins.",
                "type": "Number"
            },
            "class": "d3.chart.Plot",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 95,
            "description": "Gets the plot height",
            "itemtype": "method",
            "name": "plotHeight",
            "return": {
                "description": "The plot area height, which is the\nchart ```height``` minus ```top``` and ```bottom``` margins.",
                "type": "Number"
            },
            "class": "d3.chart.Plot",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 106,
            "description": "Returns a new ```svg:g``` plot group appended to the plot container,\nwith dimensions set to ```plotWidth``` and ```plotHeight```.",
            "itemtype": "method",
            "name": "newPlotGroup",
            "params": [
                {
                    "name": "cssClass",
                    "description": "Optional CSS class to be assigned\nto the new plot group.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "before",
                    "description": "Optional selector to insert this group before.\nAppends to the end of the plot container if not specified.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "a new `<g>` plot group.",
                "type": "SVGElement"
            },
            "class": "d3.chart.Plot",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 121,
            "description": "Returns a new ```svg:*``` plot element appended to the plot container,\nwith dimensions set to ```plotWidth``` and ```plotHeight```.",
            "itemtype": "method",
            "name": "newPlotElement",
            "params": [
                {
                    "name": "svgElement",
                    "description": "an SVG element name, such as ```svg:g```\n                           or ```svg:clipPath```.",
                    "type": "String"
                },
                {
                    "name": "cssClass",
                    "description": "Optional CSS class to be assigned\nto the new plot group.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "before",
                    "description": "Optional selector to insert this group before.\nAppends to the end of the plot container if not specified.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "a new `<g>` plot element.",
                "type": "SVGElement"
            },
            "class": "d3.chart.Plot",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.plot/d3.chart.plot.js",
            "line": 138,
            "description": "Resizes the plot area to ```plotWidth()```\nand ```plotHeight()```.",
            "itemtype": "method",
            "name": "resize",
            "class": "d3.chart.Plot",
            "namespace": "d3.chart"
        },
        {
            "file": "bower_components/d3.chart.text/d3.chart.text.js",
            "line": 19,
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Chart constructor options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "text",
                            "description": "The text string. Defaults to \"Text\"",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "title",
                            "description": "The hover tooltip/title string. Defaults to \"\"",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "d3.chart.Text",
            "namespace": "d3.chart"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " bower_components/d3.chart.arclabels/d3.chart.arclabels.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/d3.chart.axis/d3.chart.axis.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/d3.chart.grid/d3.chart.grid.js:7"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/d3.chart.plot/d3.chart.plot.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " bower_components/d3.chart.text/d3.chart.text.js:6"
        },
        {
            "message": "Missing item type\nInitializes the chart.",
            "line": " bower_components/d3.chart.grid/d3.chart.grid.js:20"
        },
        {
            "message": "Missing item type\nInitializes the chart.",
            "line": " bower_components/d3.chart.plot/d3.chart.plot.js:19"
        },
        {
            "message": "Missing item type",
            "line": " bower_components/d3.chart.text/d3.chart.text.js:19"
        }
    ]
}